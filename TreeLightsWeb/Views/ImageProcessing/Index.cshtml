@{
    ViewData["Title"] = "Image Processing";
}

<div class="text-center">
    <h1 class="display-4">Image Processing</h1>
    <p>Configuration</p>
    <p>
		<label for="BlurAmount">Blur Amount: </label>
		<input name="BlurAmount" id="BlurAmount" type="number" value="5" /><br />
		<label for="BrightnessThreshold">Brightness Threshold: </label>
		<input name="BrightnessThreshold" id="BrightnessThreshold" type="number" value="20" /><br />
		<label for="MinPointsToKeep">Min Points To Keep: </label>
		<input name="MinPointsToKeep" id="MinPointsToKeep" type="number" value="40" /><br />
		<label for="MaxYDiffBetweenTreeRotations">Max Y Diff Between Tree Rotations: </label>
		<input name="MaxYDiffBetweenTreeRotations" id="MaxYDiffBetweenTreeRotations" type="number" value="20" /><br />
		<label for="ProportionToAssumeCorrectDistances">Proportion To Assume Correct Distances: </label>
		<input name="ProportionToAssumeCorrectDistances" id="ProportionToAssumeCorrectDistances" type="number" value="0.80" /><br />
		<br />
        <input type="button" value="Capture Images" onclick="processImages()" />
    </p>
    <p><textarea id="output" rows="20" cols="150"></textarea></p>
    <p>
        <a asp-action="DownloadCoordinatesFile" asp-controller="ImageProcessing">Download Existing Coordinates File</a><br />
        <form enctype="multipart/form-data" asp-action="UploadCoordinatesFile" asp-controller="ImageProcessing" method="post">
			<fieldset>
				<legend>Coordinates File</legend>
				<input type="file" name="coordinatesFile" id="coordinatesFile" />
				<button type="submit">Upload Coordinates File</button>
            </fieldset>
        </form>
    </p>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/treehub")
            .configureLogging(signalR.LogLevel.Information)
            .build();
        connection.logging = true;

        connection.on("UpdateProcessingProgress", (progress) => {
            var txt = $("#output");
            if(progress.startsWith('\r')){
			    txt.val(txt.val().substring(0, txt.val().lastIndexOf("\n")) + progress.substring(1));
            }
            else{
                txt.val(txt.val() + "\n" + progress);
            }
            txt.scrollTop(txt[0].scrollHeight);
        });

        var Start = async () => {
            try {
                await connection.start();
                console.log("SignalR Connected.");
            } catch (err) {
                console.log(err);
                setTimeout(Start, 5000);
            }
        };

        // Start the connection.
        Start();

        connection.onclose(async () => {
            await Start();
        });

        function processImages() {
            var model = {
                BlurAmount: $('#BlurAmount').val(),
				BrightnessThreshold: $('#BrightnessThreshold').val(),
				MinPointsToKeep: $('#MinPointsToKeep').val(),
				MaxYDiffBetweenTreeRotations: $('#MaxYDiffBetweenTreeRotations').val(),
				ProportionToAssumeCorrectDistances: $('#ProportionToAssumeCorrectDistances').val()
            };



            $.ajax({
                url: '@Url.Action("StartImageProcessing", "ImageProcessing")?connectionId=' + connection.connectionId,
                method: 'post',
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(model),
                traditional: true,
                success: function (data) {
                    alert('Done');
                },
                error: function (error) {
                    alert(error.responseText);
                }
            });
        }
    </script>
}